version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: tenk_insight_frontend
    ports:
      - "3000:3000"  # Vite server port (see vite.config.ts)
    environment:
      - VITE_API_URL=http://localhost:8000  # Backend API URL
    volumes:
      - ./frontend:/app  # For hot reload
      - /app/node_modules  # Preserve node_modules
    networks:
      - tenk_network
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tenk_insight_backend
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/tenk_insight
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - AZURE_OPENAI_DEPLOYMENT=${AZURE_OPENAI_DEPLOYMENT}
      - AZURE_OPENAI_API_VERSION=${AZURE_OPENAI_API_VERSION}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - ENVIRONMENT=development
      - CORS_ORIGINS=http://localhost:5173  # Allow frontend requests
    volumes:
      - ./src:/app/src  # For hot reload
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - tenk_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    container_name: tenk_insight_postgres
    environment:
      POSTGRES_DB: tenk_insight
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=en_US.utf8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init_db.py:/docker-entrypoint-initdb.d/init_db.py
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - tenk_network

  # Optional: PgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: tenk_insight_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: morekhushshah@gmail.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - tenk_network
    profiles:
      - with-pgadmin

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  tenk_network:
    driver: bridge
